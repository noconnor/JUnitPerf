plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}

group 'com.github.noconnor'
version '1.16.1'

dependencies {
    implementation project(':junitperf-core')
    implementation 'junit:junit:4.12'
}


shadowJar {
    archiveBaseName = 'junitperf'
    archiveClassifier = ''
    dependencies {
        include(dependency(':junitperf-core'))
    }
}

jar {
    archiveClassifier = 'minimised'
}

task shadowJavadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveBaseName = 'junitperf'
    archiveClassifier = 'javadoc'
}

task shadowSourcesJar(type: Jar) {
    archiveBaseName = 'junitperf'
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier = 'minimised-javadoc'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'minimised-sources'
    from sourceSets.main.allSource
}

artifacts {
    archives shadowJar
    archives shadowJavadocJar
    archives shadowSourcesJar
    archives jar
    archives sourcesJar
    archives javadocJar
}

// http://blog.sonatype.com/2010/01/how-to-generate-pgp-signatures-with-maven/
signing {
    sign configurations.archives
}

// http://central.sonatype.org/pages/gradle.html
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name 'junitperf'
                artifactId 'junitperf'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'API performance testing framework built using JUnit'
                url 'https://github.com/noconnor/JUnitPerf'

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection 'scm:git@github.com:noconnor/JUnitPerf.git'
                    developerConnection 'scm:git@github.com:noconnor/JUnitPerf.git'
                    url 'git@github.com:noconnor/JUnitPerf.git'
                }

                developers {
                    developer {
                        id 'noconnor'
                        name 'noconnor'
                        email 'noconnorie@protonmail.com'
                    }
                }

            }
        }
    }
}